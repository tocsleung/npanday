~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help withuses the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

NPanday Library Importer Maven Plugin

   Hey, who ever starts from scratch? In the Java world, everything is in Maven Central.

   But sadly we were not fast enough to get there with NPanday before Nuget came along.
   Now, the whole .NET OSS world is on Nuget.

   But a nuget package does not canonically map to Maven/NPanday artifacts, so we can't just go use
   the {{{http://nuget.org}Nuget Gallery}} to resolve references. This is for various reasons. One is, that Nuget
   packages can contain multiple libraries for multiple target frameworks. While we can handle multiple libraries
   with multiple artifacts, the multiple frameworks are not as easily handled, sus not supported natively by NPanday.

   This is why we created this plugin. It will let you import Nuget projects, and deploy it's libraries to your own
   Maven repositories exactly how you need them.

   It defines the packaging type <<<dotnet-library-importer>>> and the corresponding lifecycle; have a look at
   the {{{./usage.html}usage documentation}} to see how to wire it up.



